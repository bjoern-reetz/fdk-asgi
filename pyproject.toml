[tool.poetry]
name = "fdk-asgi"
version = "0.5.0"
description = "An alternative FDK to easily run any ASGI application on OCI Functions behind an API Gateway."
authors = ["Bj√∂rn Reetz <git@bjoern-reetz.de>"]
readme = "README.md"
packages = [{include = "fdk_asgi", from = "src"}]

[tool.poetry.scripts]
fdk-asgi-serve = 'fdk_asgi.cli:app'

[tool.poetry.dependencies]
python = ">=3.8"
asgiref = "^3.7.2"
httptools = "^0.6.0"
typer = { version = "^0.9.0", optional = true }
uvicorn = { version = "^0.25", optional = true }

[tool.poetry.extras]
cli = ["typer", "uvicorn"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
httpx = "^0.26"
starlette = "^0.34"
python-multipart = "^0.0.6"
anyio = "^4.2.0"
trio = "^0.23.2"
hypothesis = "^6.92.2"
pytest-cov = "^4.1.0"
setuptools = "^69.0.3"  # required by pybadges
pybadges = "^3.0.1"
typer = "*"
uvicorn = "*"

[tool.coverage.run]
source = ["src", "tests"]

[tool.pytest.ini_options]
addopts = [
    "--cov",
    "--cov-report=term:skip-covered",
    "--import-mode=importlib",
    "--strict-config",
    "--strict-markers",
]
pythonpath = ["."]

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "E4", "E7", "E9", "W6",
    # mccabe
    "C90",
    # isort
    "I",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-async
    "ASYNC",
    # flake8-bandit
    "S",
    # flake8-boolean-trap
    "FBT",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-errmsg
    "EM",
    # flake8-logging-format
    "G",
    # flake8-print
    "T20",
    # flake8-pytest-style
    "PT",
    # flake8-simplify
    "SIM",
    # flake8-use-pathlib
    "PTH",
    # eradicate
    "ERA",
    # tryceratops
    "TRY",
    # perflint
    "PERF",
    # Ruff-specific rules
    "RUF",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.per-file-ignores]
"**/test_*.py" = ["S101"]
"src/fdk_asgi/testing.py" = ["S101"]
"src/fdk_asgi/cli.py" = ["FBT", "ERA001"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
changelog_start_rev = "ae609ee3fbb1b48ef3372166b5306fb249da0b3f"
pre_bump_hooks = ["scripts/regenerate-badges.sh"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
